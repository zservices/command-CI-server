#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

(($+commands[ctags])) || {
    msg {208}Error: %fNo {39}ctags%f binary found, install from \
        {70}https://github.com/universal-ctags/ctags
    return 1
}

if ! ctags --version |& grep -q "Universal Ctags"; then
    msg {208}Error: %fNo {39}%BUniversal%b Ctags%f found, Exuberant \
        Ctags isn\'t sufficient, you can get it here: \
        {70}https://github.com/universal-ctags/ctags
    return 1
fi

local Qvar=$1
integer verbose=$2

shift 2
local out=._tags.tmp q
local -A Opts=( "${(kv@)${(@PAkv)Qvar}}" )
local -a cmd=( command ctags -G -R --quiet -f $out )
local -a locations=( "$@" ) exc tmp
integer ret

(( $+Opts[-i] )) || cmd+=(-e)
(( $+Opts[-Q]||$+Opts[--qualify] )) && 
    cmd+=(
         --languages=Iniconf,${(j:,:)${(s:,:):-$Opts[-Q],$Opts[--qualify]}}) || \
    cmd+=(--languages=Iniconf)

# Blocked path patterns.
exc+=(${(s.:.):-$Opts[-x]:$Opts[--exc]})
exc=( "${exc[@]/(#s)(#m)*/--exclude=${(q)MATCH}}" )

# Append also any task path
if (($+Opts[--extask]+$+Opts[-t])); then
    ((verbose))&&msg {208}Warning:%f not processing tasks from {39}\$CMD_COMMAND_PATH
else
    local -TU CMD_PATH=$CMD_COMMAND_PATH cmd_path
    csrv-filter-dirs $cmd_path || return 1
    locations+=($reply)
fi

csrv-resolve-out-store-path "$Opts[-o]" $+Opts[-i] $+Opts[-v]
ret=$?

q=$REPLY

# Save for outer func.
Qvar=${Qvar}'[x_out_path]'
: ${(P)Qvar::=$REPLY}

integer exit_code
if (( ret )); then
    local txt="isn't writeable or accessible"
    [[ -f $q && (! -w $q:h || ! -x $q:h) ]]&&tmp=$txt
    [[ ! -e $q && -d $q:h && (! -w $q:h || ! -x $q:h) ]]&&tmp=$txt
    [[ ! -d $q:h ]]&&tmp="doesn't exist"
    [[ $q:h == $PWD ]]&&tmp="is incorrect"
    msg {208}Error:%f The specified {41}--out%f/{41}-o%f output path \
        \({39}$Opts[-o]%f\) $tmp, exiting…
    return 1
fi

(($#locations||$+Opts[-p]||$+Opts[--pwd])) || {
    msg {208}Error:%f No locations to process, exiting…
    return 1
}

(($+Opts[--pwd]||$+Opts[-p]))&&locations+=($PWD)

cmd+=( $exc $locations )
(($+Options[--verbose])) && {
    tmp=("${(@)cmd[3,-1]}")
    csrv-shorten-path 25 "${(@)tmp}"; tmp=("$reply[@]")
    msg %B{208}Executing:%f%b %B$cmd[2]%b $tmp
}
cmd+=( '2>>(grep -v "Warning.*open")' )

eval "${cmd[@]}"
exit_code+=$?

[[ -f $out ]] && {csrv-safe-move "$out" "$q" $+Opts[-v]; exit_code+=$?;}

return exit_code
# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
