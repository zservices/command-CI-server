#!/usr/bin/env zsh
csrv-extend-typecmd-text() {
    local var_name=$1 cmd=$2 tpe sh
    shift 2

    local -a args=( "$@" )
    local -A Cfg
    Cfg=( "${(@PAkv)var_name}" )

    local prefix="$Cfg[main__shell] -c"

    reply=()
    tpe=$Cfg[main__type]
    sh=$Cfg[main__shell]

    if [[ $tpe == source ]]; then 
        if [[ $sh != (none|) ]]; then
            # The arguments fall from positional params set for zsh -c
            # to the source command, which automatically inherits them.
            reply=( $sh -c "source\\ ${(q)cmd}" csrv-source )
        else
            # The positional parameters are automatically appended by
            # source builtin by the wrapping eval.
            reply=( "source ${(q)cmd}" )
        fi
    elif [[ $tpe == binary ]]; then
        # Unsupported
        if [[ $sh != (none|) ]]; then
            reply=( "() { $cmd \"\$@\"; }" )
        else
            reply=( "() { $cmd \"\$@\"; }" )
        fi
    elif [[ $tpe == autoload ]]; then
        if [[ $sh != (none|) ]]; then
            reply=( $sh -c "\"autoload $cmd; $cmd \\\$@\"" csrv-auto )
        else
            autoload $cmd
            reply=( $cmd )
        fi
    elif [[ $tpe == eval ]]; then
        reply=( eval $cmd )
    fi
    reply+=( "$args[@]" )
    print -rl -- $reply >> /tmp/reply3
}

# vim:ft=zsh:sw=4:sts=4:ts=8:et
