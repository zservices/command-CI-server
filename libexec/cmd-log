#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2022 Sebastian Gniazdowski

# Bootstrap complete exec environment.
builtin emulate -L zsh
0=${${0:#$ZSH_ARGZERO}:-${(%):-%N}}
0=${${(M)0##/*}:-$PWD/${0#./}}
source $0:h:h/lib/common.snip.zsh cmd-run $0:h:h

local -a opt_info opt_all opt_clean opt_null opt_help opt_count
csrv-log-parse-opts() {
    builtin zparseopts -D -E -- \
            -all=opt_all a=opt_all \
            -clean=opt_clean c=opt_clean \
            -null=opt_null u=opt_null \
            -info=opt_info i=opt_info \
            -help=opt_help h=opt_help \
            n:-=opt_count
    reply=("$@")
}

csrv-log-usage() {
    msg The \`{40}log%f\` subcommand show catched output of the \
        {208}\\x7bcommand-ID\\x7d%f command. Basically, it tails the standard \
    output-log file location: {70}\<cmd-dir…\>{220}/{208}_\\x7bcommand-ID\\x7d.out
    msg %B{39}Usage:%b%f
    msg \\t%B{40}cmd%b log {39}"[options…]"%f \\x7bcommand-ID\\x7d
    msg "{39}[-DIGIT|-n DIGIT]"%f –\\t Show last DIGIT lines of the log
    msg "{39}[-a|--all]"%f\\t\ \ –\\t Show whole output \(no tail -f\)
    msg "{39}[-c|--clean]"%f\\t\ \ –\\t Remove any output logs of the ID
    msg "{39}[-u|--null]"%f\\t\ \ –\\t Tail zero old lines and wait for new ones
    msg "{39}[-i|--info]"%f\\t\ \ –\\t Show some helpful info on logs of the ID
    msg "{39}[-h|--help]"%f\\t\ \ –\\t This message
}

csrv-log-parse-opts "$@"
set -- "$reply[@]"
if [[ $1 == -(#b)(<->) || $2 == -(#b)(<->) || -n $opt_count ]]; then
    typeset -gA INI
    INI[x_line_count]=${match[1]:-${opt_count[1]##-n}}
    set -- "${@:#-<->}"
fi
(($#opt_help)) && {csrv-log-usage; return 0;}
local cmd=$1 cmd_name=$1:t:r
integer exit_code=1

csrv-check-file "$cmd" command || return $?
cmd=$REPLY

# Read command definition.
@str-read-toml $cmd INI

# Replace any special sequences like %var or $var.
csrv-replace-vars INI

#
# Run cmd catching its output.
#

# The local out file.
outfile=$cmd:h/_$cmd_name.out
# x_* keys are extra, not from file.
INI[x_ini_path]=$cmd

# The main line of code.
repeat 1 { csrv-log-command INI $cmd_name $outfile; exit_code=$?; }

trap 'kill -TERM $Plugins[CMD_LOG_TAIL_PID]; return 0;' INT
# REPLY contains pid of tail -f.
[[ -n $REPLY ]] && wait $REPLY || exit_code+=$?
trap - INT

return exit_code

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
