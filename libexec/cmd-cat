#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2022 Sebastian Gniazdowski

# Bootstrap complete exec environment.
builtin emulate -L zsh
0=${${0:#$ZSH_ARGZERO}:-${(%):-%N}}
0=${${(M)0##/*}:-$PWD/${0#./}}
source $0:h:h/lib/common.snip.zsh cmd-run $0:h:h

local -a opt_help opt_cat opt_pager
csrv-cat-parse-opts() {
    builtin zparseopts -D -E -- \
            -cat::=opt_cat c:-=opt_cat \
            -pager=opt_pager p=opt_pager \
            -help=opt_help h=opt_help
    reply=("$@")
}

csrv-cat-usage() {
    msg The \`{40}edit%f\` subcommand runs the {208}bat%f viewer \
        \(or cat if not found or {70}--clean%f/{70}-c%f option given\) \
        on command definition file found in {39}\$CMD_COMMAND_PATH%f \
        or on file found by a relative or absolute path.
    msg %B{39}Usage:%b%f
    msg \\t%B{40}cmd%b edit {39}"[options…]"%f \\x7bcommand-ID\\x7d
    msg "{39}[-h|--help]"%f\\t\ \ –\\t This message
    msg "{39}[-c|--cat]"%f\\t\ \ –\\t Use the given pager, or the oridinary cat command if not specified
    msg "{39}[-p|--pager]"%f\\t\ \ –\\t Use the {70}\$PAGER command
}

csrv-cat-parse-opts "$@"
set -- "$reply[@]"
(($#opt_help)) && {csrv-cat-usage; return 0;}
[[ -z $1 && $#opt_cat -eq 1 ]] && { 1=${opt_cat[1]#(-c|--cat(=|))}; $opt_cat[1]=-ccat;}
# Utilize -c/--cat option if -p/--pager given.
[[ -n $opt_pager ]] && opt_cat="-c$PAGER"

local cmd=$1 cmd_name=$1:t:r
integer exit_code=1

csrv-check-file "$cmd" command || return $?
cmd=$REPLY

# Read command definition.
@str-read-toml $cmd INI

# Replace any special sequences like %var or $var.
csrv-replace-vars INI

#
# Run cmd catching its output.
#

# The local out file.
outfile=$cmd:h/_$cmd_name.out
# x_* keys are extra, not from file.
INI[x_ini_path]=$cmd

# The main line of code.
repeat 1 { csrv-display "$cmd" ${opt_cat#(-c|--cat(=|))}; exit_code=$?; }

return exit_code

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
